/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.bugtracker;

import java.sql.*;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.Vector;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabriel
 */

class GradientPanel extends JPanel {
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        Color color1 = getBackground();
        Color color2 = color1.darker();
        int w = getWidth();
        int h = getHeight();
        GradientPaint gp = new GradientPaint(0, 0, color1, 0, h, color2);
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, w, h);
    }
}

public class bugtracker extends javax.swing.JFrame
{
    Connection con;
    Statement statement;
    PreparedStatement preparedStatement;
    ResultSet resultSet;
    int id = -1;
    int bugid = -1;
    int rowid = -1;

    /**
     * Creates new form bugTracker
     */
    public bugtracker()
    {
        initComponents();
        landingPanel.setVisible(false);
        bugPanel.setVisible(false);
        newPanel.setVisible(false);
        editDescriptionPanel.setVisible(false);
        editReproPanel.setVisible(false);
        editNotesPanel.setVisible(false);
        
        landingTable.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        loginPanel = new GradientPanel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        loginExitButton = new javax.swing.JButton();
        landingPanel = new GradientPanel();
        landingExitButton = new javax.swing.JButton();
        landingScrollPane = new javax.swing.JScrollPane();
        landingTable = new javax.swing.JTable();
        landingViewButton = new javax.swing.JButton();
        landingNewButton = new javax.swing.JButton();
        bugPanel = new GradientPanel();
        bugNameLabel = new javax.swing.JLabel();
        bugBackButton = new javax.swing.JButton();
        bugDescriptionScrollPane = new javax.swing.JScrollPane();
        bugDescriptionTextArea = new javax.swing.JTextArea();
        bugReproScrollPane = new javax.swing.JScrollPane();
        bugReproTextArea = new javax.swing.JTextArea();
        bugNotesScrollPane = new javax.swing.JScrollPane();
        bugNotesTextArea = new javax.swing.JTextArea();
        bugStatusLabel = new javax.swing.JLabel();
        bugSeverityLabel = new javax.swing.JLabel();
        bugDescriptionLabel = new javax.swing.JLabel();
        bugReproLabel = new javax.swing.JLabel();
        bugNotesLabel = new javax.swing.JLabel();
        bugDescriptionEditButton = new javax.swing.JButton();
        bugReproductionEditButton = new javax.swing.JButton();
        bugNotesEditButton = new javax.swing.JButton();
        bugTimestampLabel = new javax.swing.JLabel();
        newPanel = new javax.swing.JPanel();
        newBackButton = new javax.swing.JButton();
        newSeverityComboBox = new javax.swing.JComboBox<>();
        newNameTextField = new javax.swing.JTextField();
        newNameLabel = new javax.swing.JLabel();
        newDescriptionScrollPane = new javax.swing.JScrollPane();
        newDescriptionTextArea = new javax.swing.JTextArea();
        newReproScrollPane = new javax.swing.JScrollPane();
        newReproTextArea = new javax.swing.JTextArea();
        newNotesScrollPane = new javax.swing.JScrollPane();
        newNotesTextArea = new javax.swing.JTextArea();
        newNotesLabel = new javax.swing.JLabel();
        newReproLabel = new javax.swing.JLabel();
        newDescriptionLabel = new javax.swing.JLabel();
        newSaveButton = new javax.swing.JButton();
        editDescriptionPanel = new javax.swing.JPanel();
        editDescriptionScrollPane = new javax.swing.JScrollPane();
        editDescriptionTextArea = new javax.swing.JTextArea();
        editDescriptionSaveButton = new javax.swing.JButton();
        editDescriptionCancelButton = new javax.swing.JButton();
        editReproPanel = new javax.swing.JPanel();
        editReproScrollPane = new javax.swing.JScrollPane();
        editReproTextArea = new javax.swing.JTextArea();
        editReproSaveButton = new javax.swing.JButton();
        editReproCancelButton = new javax.swing.JButton();
        editNotesPanel = new javax.swing.JPanel();
        editNotesScrollPane = new javax.swing.JScrollPane();
        editNotesTextArea = new javax.swing.JTextArea();
        editNotesSaveButton = new javax.swing.JButton();
        editNotesCancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        usernameLabel.setText(" Username ");
        usernameLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        passwordLabel.setText(" Password ");
        passwordLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        loginButton.setText("Log In");
        loginButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                loginButtonActionPerformed(evt);
            }
        });

        loginExitButton.setBackground(new java.awt.Color(128, 64, 64));
        loginExitButton.setForeground(new java.awt.Color(235, 235, 235));
        loginExitButton.setText("Exit");
        loginExitButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                loginExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginExitButton))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loginButton)
                    .addComponent(usernameTextField)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                .addGap(103, 103, 103))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addComponent(loginExitButton)
                .addGap(72, 72, 72)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(loginButton)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        landingExitButton.setBackground(new java.awt.Color(128, 64, 64));
        landingExitButton.setForeground(new java.awt.Color(235, 235, 235));
        landingExitButton.setText("Exit");
        landingExitButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                landingExitButtonActionPerformed(evt);
            }
        });

        landingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        landingTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        landingTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        landingScrollPane.setViewportView(landingTable);

        landingViewButton.setText("View Selected");
        landingViewButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                landingViewButtonActionPerformed(evt);
            }
        });

        landingNewButton.setText("Report New");
        landingNewButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                landingNewButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout landingPanelLayout = new javax.swing.GroupLayout(landingPanel);
        landingPanel.setLayout(landingPanelLayout);
        landingPanelLayout.setHorizontalGroup(
            landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(landingPanelLayout.createSequentialGroup()
                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landingPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(landingExitButton))
                    .addGroup(landingPanelLayout.createSequentialGroup()
                        .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(landingPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(landingScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(landingPanelLayout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(landingViewButton)
                                .addGap(60, 60, 60)
                                .addComponent(landingNewButton)))
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addContainerGap())
        );
        landingPanelLayout.setVerticalGroup(
            landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(landingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(landingExitButton)
                .addGap(18, 18, 18)
                .addComponent(landingScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(landingViewButton)
                    .addComponent(landingNewButton))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        bugNameLabel.setText(" NAME");
        bugNameLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bugBackButton.setBackground(new java.awt.Color(128, 64, 64));
        bugBackButton.setForeground(new java.awt.Color(235, 235, 235));
        bugBackButton.setText("Back");
        bugBackButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bugBackButtonActionPerformed(evt);
            }
        });

        bugDescriptionTextArea.setEditable(false);
        bugDescriptionTextArea.setColumns(20);
        bugDescriptionTextArea.setLineWrap(true);
        bugDescriptionTextArea.setRows(5);
        bugDescriptionTextArea.setWrapStyleWord(true);
        bugDescriptionScrollPane.setViewportView(bugDescriptionTextArea);

        bugReproTextArea.setEditable(false);
        bugReproTextArea.setColumns(20);
        bugReproTextArea.setLineWrap(true);
        bugReproTextArea.setRows(5);
        bugReproTextArea.setWrapStyleWord(true);
        bugReproScrollPane.setViewportView(bugReproTextArea);

        bugNotesTextArea.setEditable(false);
        bugNotesTextArea.setColumns(20);
        bugNotesTextArea.setLineWrap(true);
        bugNotesTextArea.setRows(5);
        bugNotesTextArea.setWrapStyleWord(true);
        bugNotesScrollPane.setViewportView(bugNotesTextArea);

        bugStatusLabel.setText(" STATUS");
        bugStatusLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bugStatusLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                bugStatusLabelMouseClicked(evt);
            }
        });

        bugSeverityLabel.setText(" SEVERITY");
        bugSeverityLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bugSeverityLabel.setOpaque(true);
        bugSeverityLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                bugSeverityLabelMouseClicked(evt);
            }
        });

        bugDescriptionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bugDescriptionLabel.setText(" Description ");
        bugDescriptionLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bugReproLabel.setText(" Reproduction ");
        bugReproLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bugNotesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bugNotesLabel.setText("Notes");
        bugNotesLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bugDescriptionEditButton.setText("Edit");
        bugDescriptionEditButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bugDescriptionEditButtonActionPerformed(evt);
            }
        });

        bugReproductionEditButton.setText("Edit");
        bugReproductionEditButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bugReproductionEditButtonActionPerformed(evt);
            }
        });

        bugNotesEditButton.setText("Edit");
        bugNotesEditButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bugNotesEditButtonActionPerformed(evt);
            }
        });

        bugTimestampLabel.setText(" TIMESTAMP");
        bugTimestampLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout bugPanelLayout = new javax.swing.GroupLayout(bugPanel);
        bugPanel.setLayout(bugPanelLayout);
        bugPanelLayout.setHorizontalGroup(
            bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bugPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bugPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bugStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bugSeverityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bugBackButton))
                    .addGroup(bugPanelLayout.createSequentialGroup()
                        .addGroup(bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bugTimestampLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bugNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bugPanelLayout.createSequentialGroup()
                                .addGroup(bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bugDescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bugDescriptionEditButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bugPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(bugNotesEditButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bugReproductionEditButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bugNotesLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bugReproLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bugReproScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(bugDescriptionScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(bugNotesScrollPane))))
                        .addContainerGap())))
        );
        bugPanelLayout.setVerticalGroup(
            bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bugPanelLayout.createSequentialGroup()
                .addGroup(bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bugBackButton)
                    .addComponent(bugStatusLabel)
                    .addComponent(bugSeverityLabel))
                .addGap(4, 4, 4)
                .addComponent(bugNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bugDescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bugPanelLayout.createSequentialGroup()
                        .addComponent(bugDescriptionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bugDescriptionEditButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bugReproScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bugPanelLayout.createSequentialGroup()
                        .addComponent(bugReproLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bugReproductionEditButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bugNotesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bugPanelLayout.createSequentialGroup()
                        .addComponent(bugNotesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bugNotesEditButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bugTimestampLabel)
                .addContainerGap())
        );

        newBackButton.setBackground(new java.awt.Color(128, 64, 64));
        newBackButton.setForeground(new java.awt.Color(235, 235, 235));
        newBackButton.setText("Back");
        newBackButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                newBackButtonActionPerformed(evt);
            }
        });

        newSeverityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Severity: Low", "Severity: Medium", "Severity: High", "Severity: Critical" }));

        newNameLabel.setText(" Name: ");
        newNameLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        newDescriptionTextArea.setColumns(20);
        newDescriptionTextArea.setLineWrap(true);
        newDescriptionTextArea.setRows(5);
        newDescriptionTextArea.setWrapStyleWord(true);
        newDescriptionScrollPane.setViewportView(newDescriptionTextArea);

        newReproTextArea.setColumns(20);
        newReproTextArea.setLineWrap(true);
        newReproTextArea.setRows(5);
        newReproTextArea.setWrapStyleWord(true);
        newReproScrollPane.setViewportView(newReproTextArea);

        newNotesTextArea.setColumns(20);
        newNotesTextArea.setLineWrap(true);
        newNotesTextArea.setRows(5);
        newNotesTextArea.setWrapStyleWord(true);
        newNotesScrollPane.setViewportView(newNotesTextArea);

        newNotesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newNotesLabel.setText("Notes");
        newNotesLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        newReproLabel.setText(" Reproduction ");
        newReproLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        newDescriptionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newDescriptionLabel.setText(" Description ");
        newDescriptionLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        newSaveButton.setText("Save");
        newSaveButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                newSaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newPanelLayout = new javax.swing.GroupLayout(newPanel);
        newPanel.setLayout(newPanelLayout);
        newPanelLayout.setHorizontalGroup(
            newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newPanelLayout.createSequentialGroup()
                        .addComponent(newSeverityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newBackButton))
                    .addGroup(newPanelLayout.createSequentialGroup()
                        .addGroup(newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newPanelLayout.createSequentialGroup()
                                .addComponent(newNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newNameTextField))
                            .addGroup(newPanelLayout.createSequentialGroup()
                                .addGroup(newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(newReproLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(newDescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(newNotesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(newSaveButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newReproScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                                    .addComponent(newDescriptionScrollPane)
                                    .addComponent(newNotesScrollPane))))
                        .addContainerGap())))
        );
        newPanelLayout.setVerticalGroup(
            newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newPanelLayout.createSequentialGroup()
                .addGroup(newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newBackButton)
                    .addComponent(newSeverityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newDescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newDescriptionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newReproScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newReproLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newPanelLayout.createSequentialGroup()
                        .addComponent(newNotesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(newPanelLayout.createSequentialGroup()
                        .addComponent(newNotesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newSaveButton)))
                .addContainerGap())
        );

        editDescriptionTextArea.setColumns(20);
        editDescriptionTextArea.setLineWrap(true);
        editDescriptionTextArea.setRows(5);
        editDescriptionTextArea.setWrapStyleWord(true);
        editDescriptionScrollPane.setViewportView(editDescriptionTextArea);

        editDescriptionSaveButton.setText("Save");
        editDescriptionSaveButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editDescriptionSaveButtonActionPerformed(evt);
            }
        });

        editDescriptionCancelButton.setText("Cancel");
        editDescriptionCancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editDescriptionCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editDescriptionPanelLayout = new javax.swing.GroupLayout(editDescriptionPanel);
        editDescriptionPanel.setLayout(editDescriptionPanelLayout);
        editDescriptionPanelLayout.setHorizontalGroup(
            editDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editDescriptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editDescriptionScrollPane)
                .addContainerGap())
            .addGroup(editDescriptionPanelLayout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(editDescriptionSaveButton)
                .addGap(81, 81, 81)
                .addComponent(editDescriptionCancelButton)
                .addGap(97, 97, 97))
        );
        editDescriptionPanelLayout.setVerticalGroup(
            editDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editDescriptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editDescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDescriptionSaveButton)
                    .addComponent(editDescriptionCancelButton))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        editReproTextArea.setColumns(20);
        editReproTextArea.setLineWrap(true);
        editReproTextArea.setRows(5);
        editReproTextArea.setWrapStyleWord(true);
        editReproScrollPane.setViewportView(editReproTextArea);

        editReproSaveButton.setText("Save");
        editReproSaveButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editReproSaveButtonActionPerformed(evt);
            }
        });

        editReproCancelButton.setText("Cancel");
        editReproCancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editReproCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editReproPanelLayout = new javax.swing.GroupLayout(editReproPanel);
        editReproPanel.setLayout(editReproPanelLayout);
        editReproPanelLayout.setHorizontalGroup(
            editReproPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editReproPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editReproScrollPane)
                .addContainerGap())
            .addGroup(editReproPanelLayout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(editReproSaveButton)
                .addGap(81, 81, 81)
                .addComponent(editReproCancelButton)
                .addGap(97, 97, 97))
        );
        editReproPanelLayout.setVerticalGroup(
            editReproPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editReproPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editReproScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editReproPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editReproSaveButton)
                    .addComponent(editReproCancelButton))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        editNotesTextArea.setColumns(20);
        editNotesTextArea.setLineWrap(true);
        editNotesTextArea.setRows(5);
        editNotesTextArea.setWrapStyleWord(true);
        editNotesScrollPane.setViewportView(editNotesTextArea);

        editNotesSaveButton.setText("Save");
        editNotesSaveButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editNotesSaveButtonActionPerformed(evt);
            }
        });

        editNotesCancelButton.setText("Cancel");
        editNotesCancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editNotesCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editNotesPanelLayout = new javax.swing.GroupLayout(editNotesPanel);
        editNotesPanel.setLayout(editNotesPanelLayout);
        editNotesPanelLayout.setHorizontalGroup(
            editNotesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editNotesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editNotesScrollPane)
                .addContainerGap())
            .addGroup(editNotesPanelLayout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(editNotesSaveButton)
                .addGap(81, 81, 81)
                .addComponent(editNotesCancelButton)
                .addGap(97, 97, 97))
        );
        editNotesPanelLayout.setVerticalGroup(
            editNotesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editNotesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editNotesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editNotesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editNotesSaveButton)
                    .addComponent(editNotesCancelButton))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(landingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(bugPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(editDescriptionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(editReproPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(editNotesPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(landingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(bugPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(newPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(editDescriptionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(editReproPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(editNotesPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bugStatusLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_bugStatusLabelMouseClicked
    {//GEN-HEADEREND:event_bugStatusLabelMouseClicked
        String[] selVals = {"Open", "Working", "Resolved", "Will Not Fix"};
        Object sel = JOptionPane.showInputDialog(new JFrame(), "What would you like to set the status to?", "Change Status", JOptionPane.QUESTION_MESSAGE, null, selVals, "Open");
        
        try {
            String url = "jdbc:mysql://localhost:3307/sys";
            String dbuser = "java";
            String dbpass = "javapass";
            con = DriverManager.getConnection(url, dbuser, dbpass);
            
            preparedStatement = con.prepareStatement("UPDATE bugs SET bugstatus = ? WHERE idbugs = ?");
            preparedStatement.setInt(2, bugid);
            
            if (sel.equals("Open")) {
                preparedStatement.setInt(1, 0);
                bugStatusLabel.setText(" Status: Open");
                
                landingTable.setValueAt("Open", rowid, 1);
            }
            else if (sel.equals("Working")) {
                preparedStatement.setInt(1, 1);
                bugStatusLabel.setText(" Status: Working");
                
                landingTable.setValueAt("Working", rowid, 1);
            }
            else if (sel.equals("Resolved")) {
                preparedStatement.setInt(1, 2);
                bugStatusLabel.setText(" Status: Resolved");
                
                landingTable.setValueAt("Resolved", rowid, 1);
            }
            else {
                preparedStatement.setInt(1, 3);
                bugStatusLabel.setText(" Status: Will Not Fix");
                
                landingTable.setValueAt("WNF", rowid, 1);
            }
            preparedStatement.executeUpdate();
        }
        catch (Exception e) {System.out.println(e);}
        finally {close(null, preparedStatement, con);}
    }//GEN-LAST:event_bugStatusLabelMouseClicked

    private void bugSeverityLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_bugSeverityLabelMouseClicked
    {//GEN-HEADEREND:event_bugSeverityLabelMouseClicked
        String[] selVals = {"Low", "Medium", "High", "Critical"};
        Object sel = JOptionPane.showInputDialog(new JFrame(), "What would you like to set the severity to?", "Change Severity", JOptionPane.QUESTION_MESSAGE, null, selVals, "Open");
        
        try {
            String url = "jdbc:mysql://localhost:3307/sys";
            String dbuser = "java";
            String dbpass = "javapass";
            con = DriverManager.getConnection(url, dbuser, dbpass);
            
            preparedStatement = con.prepareStatement("UPDATE bugs SET bugseverity = ? WHERE idbugs = ?");
            preparedStatement.setInt(2, bugid);
            
            if (sel.equals("Low")) {
                preparedStatement.setInt(1, 0);
                bugSeverityLabel.setText(" Severity: Low");
                bugSeverityLabel.setBackground(new Color(153,204,255));
                
                landingTable.setValueAt("Low", rowid, 2);
            }
            else if (sel.equals("Medium")) {
                preparedStatement.setInt(1, 1);
                bugSeverityLabel.setText(" Severity: Medium");
                bugSeverityLabel.setBackground(new Color(235,235,235));
                
                landingTable.setValueAt("Medium", rowid, 2);
            }
            else if (sel.equals("High")) {
                preparedStatement.setInt(1, 2);
                bugSeverityLabel.setText(" Severity: High");
                bugSeverityLabel.setBackground(new Color(255,255,204));
                
                landingTable.setValueAt("High", rowid, 2);
            }
            else {
                preparedStatement.setInt(1, 3);
                bugSeverityLabel.setText(" Severity: Critical");
                bugSeverityLabel.setBackground(new Color(255,153,153));
                
                landingTable.setValueAt("Critical", rowid, 2);
            }
            preparedStatement.executeUpdate();
        }
        catch (Exception e) {System.out.println(e);}
        finally {close(null, preparedStatement, con);}
    }//GEN-LAST:event_bugSeverityLabelMouseClicked

    private void loginExitButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loginExitButtonActionPerformed
    {//GEN-HEADEREND:event_loginExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_loginExitButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loginButtonActionPerformed
    {//GEN-HEADEREND:event_loginButtonActionPerformed
        String user, pass;
        user = usernameTextField.getText();
        pass = passwordTextField.getText();

        if (user.equals("") || pass.equals(""))
        {
            JOptionPane.showMessageDialog(new JFrame(), "Please enter a username and password.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            try
            {
                String url = "jdbc:mysql://localhost:3307/sys";
                String dbuser = "java";
                String dbpass = "javapass";
                con = DriverManager.getConnection(url, dbuser, dbpass);
                preparedStatement = con.prepareStatement("SELECT * FROM users WHERE username = ?");
                preparedStatement.setString(1, user);
                resultSet = preparedStatement.executeQuery();
                
                Boolean auth = false;
                while (resultSet.next())
                {
                    if (resultSet.getString("password").equals(pass))
                    {
                        id = resultSet.getInt("idusers");
                        auth = true;

                        //Populate table
                        statement = con.createStatement();
                        resultSet = statement.executeQuery("SELECT * FROM bugs");
                        
                        DefaultTableModel bugTable = new DefaultTableModel();
                        bugTable.addColumn("Name");
                        bugTable.addColumn("Status");
                        bugTable.addColumn("Severity");
                        bugTable.addColumn("Posted On");
                        
                        while (resultSet.next()) {
                            Vector row = new Vector();
                            row.add(resultSet.getInt("idbugs") + " " + resultSet.getString("bugname"));
                            switch (resultSet.getInt("bugstatus")) {
                                case 1:
                                    row.add("Working");
                                    break;
                                case 2:
                                    row.add("Resolved");
                                    break;
                                case 3:
                                    row.add("WNF");
                                    break;
                                default:
                                    row.add("Open");
                            }
                            switch (resultSet.getInt("bugseverity")) {
                                case 0:
                                    row.add("Low");
                                    break;
                                case 2:
                                    row.add("High");
                                    break;
                                case 3:
                                    row.add("Critical");
                                    break;
                                default:
                                    row.add("Medium");
                            }
                            row.add(resultSet.getString("bugsubdate"));
                            bugTable.addRow(row);
                        }
                        landingTable.setModel(bugTable);

                        //Create next view 
                        loginPanel.setVisible(false);
                        landingPanel.setVisible(true);
                        break;
                    }
                }
                if (!auth) JOptionPane.showMessageDialog(new JFrame(), "Invalid credentials.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            catch (Exception e)
            {
                System.out.println(e);
            }
            finally {close(resultSet, preparedStatement, con);}
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void landingExitButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_landingExitButtonActionPerformed
    {//GEN-HEADEREND:event_landingExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_landingExitButtonActionPerformed

    private void landingViewButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_landingViewButtonActionPerformed
    {//GEN-HEADEREND:event_landingViewButtonActionPerformed
        try {
            String sel = landingTable.getValueAt(landingTable.getSelectedRow(), 0).toString();
            bugid = Integer.parseInt(sel.split(" ")[0]);
            rowid = landingTable.getSelectedRow();
            
            String url = "jdbc:mysql://localhost:3307/sys";
            String dbuser = "java";
            String dbpass = "javapass";
            con = DriverManager.getConnection(url, dbuser, dbpass);
            
            preparedStatement = con.prepareStatement("SELECT * FROM bugs WHERE idbugs = ?");
            preparedStatement.setInt(1, bugid);
            resultSet = preparedStatement.executeQuery();
            resultSet.next();
            
            //Get data
            switch (resultSet.getInt("bugstatus")) {
                case 1:
                    bugStatusLabel.setText(" Status: Working");
                    break;
                case 2:
                    bugStatusLabel.setText(" Status: Resolved");
                    break;
                case 3:
                    bugStatusLabel.setText(" Status: Will Not Fix");
                    break;
                default:
                    bugStatusLabel.setText(" Status: Open");
            }
            switch (resultSet.getInt("bugseverity")) {
                case 0:
                    bugSeverityLabel.setText(" Severity: Low");
                    bugSeverityLabel.setBackground(new Color(153, 204, 255));
                    break;
                case 2:
                    bugSeverityLabel.setText(" Severity: High");
                    bugSeverityLabel.setBackground(new Color(255, 255, 204));
                    break;
                case 3:
                    bugSeverityLabel.setText(" Severity: Critical");
                    bugSeverityLabel.setBackground(new Color(255, 153, 153));
                    break;
                default:
                    bugSeverityLabel.setText(" Severity: Medium");
                    bugSeverityLabel.setBackground(new Color(235, 235, 235));
            }
            bugNameLabel.setText(" Name: " + resultSet.getString("bugname"));
            bugDescriptionTextArea.setText(resultSet.getString("bugdesc"));
            bugReproTextArea.setText(resultSet.getString("bugrepro"));
            bugNotesTextArea.setText(resultSet.getString("bugnotes"));
            bugTimestampLabel.setText(" Posted on: " + resultSet.getString("bugsubdate"));
            
            landingPanel.setVisible(false);
            bugPanel.setVisible(true);
        }
        catch (Exception e) {System.out.println(e);}
        finally {close(resultSet, preparedStatement, con);}
    }//GEN-LAST:event_landingViewButtonActionPerformed

    private void landingNewButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_landingNewButtonActionPerformed
    {//GEN-HEADEREND:event_landingNewButtonActionPerformed
        landingPanel.setVisible(false);
        newPanel.setVisible(true);
    }//GEN-LAST:event_landingNewButtonActionPerformed

    private void bugBackButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bugBackButtonActionPerformed
    {//GEN-HEADEREND:event_bugBackButtonActionPerformed
        bugPanel.setVisible(false);
        landingPanel.setVisible(true);
    }//GEN-LAST:event_bugBackButtonActionPerformed

    private void bugDescriptionEditButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bugDescriptionEditButtonActionPerformed
    {//GEN-HEADEREND:event_bugDescriptionEditButtonActionPerformed
        editDescriptionTextArea.setText(bugDescriptionTextArea.getText());
        
        bugPanel.setVisible(false);
        editDescriptionPanel.setVisible(true);
    }//GEN-LAST:event_bugDescriptionEditButtonActionPerformed

    private void bugReproductionEditButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bugReproductionEditButtonActionPerformed
    {//GEN-HEADEREND:event_bugReproductionEditButtonActionPerformed
        editReproTextArea.setText(bugReproTextArea.getText());
        
        bugPanel.setVisible(false);
        editReproPanel.setVisible(true);
    }//GEN-LAST:event_bugReproductionEditButtonActionPerformed

    private void bugNotesEditButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bugNotesEditButtonActionPerformed
    {//GEN-HEADEREND:event_bugNotesEditButtonActionPerformed
        editNotesTextArea.setText(bugNotesTextArea.getText());
        
        bugPanel.setVisible(false);
        editNotesPanel.setVisible(true);
    }//GEN-LAST:event_bugNotesEditButtonActionPerformed

    private void newBackButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_newBackButtonActionPerformed
    {//GEN-HEADEREND:event_newBackButtonActionPerformed
        newPanel.setVisible(false);
        landingPanel.setVisible(true);
    }//GEN-LAST:event_newBackButtonActionPerformed

    private void newSaveButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_newSaveButtonActionPerformed
    {//GEN-HEADEREND:event_newSaveButtonActionPerformed
        try {
            if (newNameTextField.getText().equals("")) {
                JOptionPane.showMessageDialog(new JFrame(), "Please enter a name for this bug report.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            else if (newDescriptionTextArea.getText().equals("")) {
                JOptionPane.showMessageDialog(new JFrame(), "Please enter a description for this bug report.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            else if (newReproTextArea.getText().equals("")) {
                JOptionPane.showMessageDialog(new JFrame(), "Please provide a guide on how to reproduce this bug.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            else {
                String url = "jdbc:mysql://localhost:3307/sys";
                String dbuser = "java";
                String dbpass = "javapass";
                con = DriverManager.getConnection(url, dbuser, dbpass);

                preparedStatement = con.prepareStatement("INSERT INTO bugs VALUES (default, ?, ?, ?, ?, 0, ?, sysdate())");
                preparedStatement.setString(1, newNameTextField.getText());
                preparedStatement.setString(2, newDescriptionTextArea.getText());
                preparedStatement.setString(3, newReproTextArea.getText());
                preparedStatement.setString(4, newNotesTextArea.getText());
                preparedStatement.setInt(5, newSeverityComboBox.getSelectedIndex());
                preparedStatement.executeUpdate();
                
                JOptionPane.showMessageDialog(new JFrame(), "Bug report submitted.", null, 0);
                
                preparedStatement = con.prepareStatement("SELECT * FROM bugs WHERE bugname = ? AND bugdesc = ?");
                preparedStatement.setString(1, newNameTextField.getText());
                preparedStatement.setString(2, newDescriptionTextArea.getText());
                resultSet = preparedStatement.executeQuery();
                resultSet.next();
                Vector row = new Vector();
                row.add(resultSet.getInt("idbugs") + " " + newNameTextField.getText());
                row.add("Open");
                switch (newSeverityComboBox.getSelectedIndex()) {
                    case 0:
                        row.add("Low");
                        break;
                    case 1:
                        row.add("Medium");
                        break;
                    case 2:
                        row.add("High");
                        break;
                    default:
                        row.add("Critical");
                }
                row.add(resultSet.getString("bugsubdate"));
                DefaultTableModel newtable = (DefaultTableModel) landingTable.getModel();
                newtable.addRow(row);
                landingTable.setModel(newtable);

                newPanel.setVisible(false);
                landingPanel.setVisible(true);
            }
        }
        catch (Exception e) {System.out.println(e);}
        finally {close(resultSet, preparedStatement, con);}
    }//GEN-LAST:event_newSaveButtonActionPerformed

    private void editDescriptionCancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_editDescriptionCancelButtonActionPerformed
    {//GEN-HEADEREND:event_editDescriptionCancelButtonActionPerformed
        editDescriptionPanel.setVisible(false);
        bugPanel.setVisible(true);
    }//GEN-LAST:event_editDescriptionCancelButtonActionPerformed

    private void editDescriptionSaveButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_editDescriptionSaveButtonActionPerformed
    {//GEN-HEADEREND:event_editDescriptionSaveButtonActionPerformed
        try {
            String url = "jdbc:mysql://localhost:3307/sys";
            String dbuser = "java";
            String dbpass = "javapass";
            con = DriverManager.getConnection(url, dbuser, dbpass);
            
            preparedStatement = con.prepareStatement("UPDATE bugs SET bugdesc = ? WHERE idbugs = ?");
            preparedStatement.setString(1, editDescriptionTextArea.getText());
            preparedStatement.setInt(2, bugid);
            preparedStatement.executeUpdate();
            
            bugDescriptionTextArea.setText(editDescriptionTextArea.getText());
            
            editDescriptionPanel.setVisible(false);
            bugPanel.setVisible(true);
        }
        catch (Exception e) {System.out.println(e);}
        finally {close(null, preparedStatement, con);}
    }//GEN-LAST:event_editDescriptionSaveButtonActionPerformed

    private void editReproCancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_editReproCancelButtonActionPerformed
    {//GEN-HEADEREND:event_editReproCancelButtonActionPerformed
        editReproPanel.setVisible(false);
        bugPanel.setVisible(true);
    }//GEN-LAST:event_editReproCancelButtonActionPerformed

    private void editReproSaveButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_editReproSaveButtonActionPerformed
    {//GEN-HEADEREND:event_editReproSaveButtonActionPerformed
        try {
            String url = "jdbc:mysql://localhost:3307/sys";
            String dbuser = "java";
            String dbpass = "javapass";
            con = DriverManager.getConnection(url, dbuser, dbpass);
            
            preparedStatement = con.prepareStatement("UPDATE bugs SET bugrepro = ? WHERE idbugs = ?");
            preparedStatement.setString(1, editReproTextArea.getText());
            preparedStatement.setInt(2, bugid);
            preparedStatement.executeUpdate();
            
            bugReproTextArea.setText(editReproTextArea.getText());
            
            editReproPanel.setVisible(false);
            bugPanel.setVisible(true);
        }
        catch (Exception e) {System.out.println(e);}
        finally {close(null, preparedStatement, con);}
    }//GEN-LAST:event_editReproSaveButtonActionPerformed

    private void editNotesCancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_editNotesCancelButtonActionPerformed
    {//GEN-HEADEREND:event_editNotesCancelButtonActionPerformed
        editNotesPanel.setVisible(false);
        bugPanel.setVisible(true);
    }//GEN-LAST:event_editNotesCancelButtonActionPerformed

    private void editNotesSaveButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_editNotesSaveButtonActionPerformed
    {//GEN-HEADEREND:event_editNotesSaveButtonActionPerformed
        try {
            String url = "jdbc:mysql://localhost:3307/sys";
            String dbuser = "java";
            String dbpass = "javapass";
            con = DriverManager.getConnection(url, dbuser, dbpass);
            
            preparedStatement = con.prepareStatement("UPDATE bugs SET bugdesc = ? WHERE idbugs = ?");
            preparedStatement.setString(1, editNotesTextArea.getText());
            preparedStatement.setInt(2, bugid);
            preparedStatement.executeUpdate();
            
            bugNotesTextArea.setText(editNotesTextArea.getText());
            
            editNotesPanel.setVisible(false);
            bugPanel.setVisible(true);
        }
        catch (Exception e) {System.out.println(e);}
        finally {close(null, preparedStatement, con);}
    }//GEN-LAST:event_editNotesSaveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(bugtracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(bugtracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(bugtracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(bugtracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new bugtracker().setVisible(true);
            }
        });
    }
    
    private void close(ResultSet resultSet, Statement statement, Connection con) {
        try {
            if (resultSet != null) {
                resultSet.close();
            }
            
            if (statement != null) {
                statement.close();
            }
            if (con != null) {
                con.close();
            }
        } 
        catch (Exception e) {}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bugBackButton;
    private javax.swing.JButton bugDescriptionEditButton;
    private javax.swing.JLabel bugDescriptionLabel;
    private javax.swing.JScrollPane bugDescriptionScrollPane;
    private javax.swing.JTextArea bugDescriptionTextArea;
    private javax.swing.JLabel bugNameLabel;
    private javax.swing.JButton bugNotesEditButton;
    private javax.swing.JLabel bugNotesLabel;
    private javax.swing.JScrollPane bugNotesScrollPane;
    private javax.swing.JTextArea bugNotesTextArea;
    private javax.swing.JPanel bugPanel;
    private javax.swing.JLabel bugReproLabel;
    private javax.swing.JScrollPane bugReproScrollPane;
    private javax.swing.JTextArea bugReproTextArea;
    private javax.swing.JButton bugReproductionEditButton;
    private javax.swing.JLabel bugSeverityLabel;
    private javax.swing.JLabel bugStatusLabel;
    private javax.swing.JLabel bugTimestampLabel;
    private javax.swing.JButton editDescriptionCancelButton;
    private javax.swing.JPanel editDescriptionPanel;
    private javax.swing.JButton editDescriptionSaveButton;
    private javax.swing.JScrollPane editDescriptionScrollPane;
    private javax.swing.JTextArea editDescriptionTextArea;
    private javax.swing.JButton editNotesCancelButton;
    private javax.swing.JPanel editNotesPanel;
    private javax.swing.JButton editNotesSaveButton;
    private javax.swing.JScrollPane editNotesScrollPane;
    private javax.swing.JTextArea editNotesTextArea;
    private javax.swing.JButton editReproCancelButton;
    private javax.swing.JPanel editReproPanel;
    private javax.swing.JButton editReproSaveButton;
    private javax.swing.JScrollPane editReproScrollPane;
    private javax.swing.JTextArea editReproTextArea;
    private javax.swing.JButton landingExitButton;
    private javax.swing.JButton landingNewButton;
    private javax.swing.JPanel landingPanel;
    private javax.swing.JScrollPane landingScrollPane;
    private javax.swing.JTable landingTable;
    private javax.swing.JButton landingViewButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton loginExitButton;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton newBackButton;
    private javax.swing.JLabel newDescriptionLabel;
    private javax.swing.JScrollPane newDescriptionScrollPane;
    private javax.swing.JTextArea newDescriptionTextArea;
    private javax.swing.JLabel newNameLabel;
    private javax.swing.JTextField newNameTextField;
    private javax.swing.JLabel newNotesLabel;
    private javax.swing.JScrollPane newNotesScrollPane;
    private javax.swing.JTextArea newNotesTextArea;
    private javax.swing.JPanel newPanel;
    private javax.swing.JLabel newReproLabel;
    private javax.swing.JScrollPane newReproScrollPane;
    private javax.swing.JTextArea newReproTextArea;
    private javax.swing.JButton newSaveButton;
    private javax.swing.JComboBox<String> newSeverityComboBox;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
